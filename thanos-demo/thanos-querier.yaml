#
# based on  https://github.com/improbable-eng/thanos/blob/master/tutorials/kubernetes-demo/manifests/thanos-querier.yaml
#
---
kind: Namespace
apiVersion: v1
metadata:
  name: thanos-demo
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-querier
  namespace: thanos-demo
  labels:
    app: thanos-querier
spec:
  type: ClusterIP
  selector:
    app: thanos-querier
  ports:
  - port: 10902
    protocol: TCP
    targetPort: http
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-store-gateway
  namespace: thanos-demo
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 10901
    targetPort: grpc
  selector:
    thanos-store-api: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-querier
  namespace: thanos-demo
  labels:
    app: thanos-querier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-querier
  template:
    metadata:
      labels:
        app: thanos-querier
    spec:
      containers:
      - name: thanos
        image: improbable/thanos:v0.3.2
        args:
        - query
        - --query.replica-label=replica
        - --cluster.disable
        - --store=[AKS_ADDRESS]:10901 # AKS sidecar
        - --store=[AKS_ADDRESS]:10911 # AKS store
        - --store=[DO_ADDRESS]:10901  # DO sidecar
        - --store=[DO_ADDRESS]:10911  # DO store
        - --store=[EKS_ADDRESS]:10901 # EKS sidecar
        - --store=[EKS_ADDRESS]:10911 # EKS store
        - --store=[GKE_ADDRESS]:10901 # GKE sidecar
        - --store=[GKE_ADDRESS]:10911 # GKE store
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
---
###
### Grafana
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: grafana
  namespace: thanos-demo
---
kind: Service
apiVersion: v1
metadata:
  name: grafana
  namespace: thanos-demo
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: thanos-demo
spec:
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - env:
        - name: GF_PATHS_DATA
          value: /data
        image: gcr.io/linkerd-io/grafana:edge-19.3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        securityContext:
          runAsUser: 472
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/grafana
          name: grafana-config
          readOnly: true

      serviceAccountName: grafana
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          items:
          - key: grafana.ini
            path: grafana.ini
          - key: datasources.yaml
            path: provisioning/datasources/datasources.yaml
          - key: dashboards.yaml
            path: provisioning/dashboards/dashboards.yaml
          name: grafana-config
        name: grafana-config
status: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: grafana-config
  namespace: thanos-demo
data:
  grafana.ini: |-
    instance_name = grafana

    [auth]
    disable_login_form = true

    [auth.anonymous]
    enabled = true
    org_role = Editor

    [auth.basic]
    enabled = false

    [analytics]
    check_for_updates = false

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://thanos-querier.thanos-demo.svc.cluster.local:10902
      isDefault: true
      jsonData:
        timeInterval: "5s"
      version: 1
      editable: true

  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
        homeDashboardId: linkerd-top-line
---
